-*- org-confirm-babel-evaluate: nil -*-
#+property: header-args:python :session :results output :tangle analysis.py :eval yes :exports both
#+startup: inlineimages

* Extra Credit Opportunity 3

** Imports

#+begin_src python
  import pandas as pd
  import numpy as np
  from scipy.optimize import curve_fit
  import matplotlib.pyplot as plt
#+end_src

#+RESULTS:

** Read Data

#+begin_src python
  df = pd.read_csv('ECO3.tsv', sep='\t', header=1)

  df.columns = df.columns.str.replace(r" \(.+\)", '', regex=True)

  df = df[df["RPM"] > 100]
  df = df.truncate(after=df["RPM"].idxmax())
#+end_src

#+RESULTS:

** Find P_rc

#+begin_src python :exports both
  P_rc = np.mean(df["P2"]/df["P1"])

  print(f"{P_rc:.5g}")
#+end_src

#+RESULTS:
: 35.868

** Plots

#+begin_src python :results graphics file output :file images/T04_vs_Thrust.png :exports both
  plt.title("T04 vs Thrust")
  plt.xlabel("Thrust (lbs)")
  plt.ylabel("T04 (C)")
  x = df["Thrust"]
  y = df["T4"]

  plt.plot(x, y)
#+end_src

#+RESULTS:
[[file:images/T04_vs_Thrust.png]]

#+begin_src python :results graphics file output :file images/RPM_vs_Thrust.png :exports both
  plt.title("RPM vs Thrust")
  plt.xlabel("Thrust (lbs)")
  plt.ylabel("RPM")

  plt.plot(df["Thrust"], df["RPM"])
#+end_src

#+RESULTS:
[[file:images/RPM_vs_Thrust.png]]

#+begin_src python :results graphics file output :file images/T04_vs_RPM.png :exports both
  plt.title("T04 vs RPM")
  plt.xlabel("RPM")
  plt.ylabel("T04 (C)")

  plt.plot(df["RPM"], df["T4"])
#+end_src

#+RESULTS:
[[file:images/T04_vs_RPM.png]]
